using System;
using FluentAssertions;
using Xunit;

namespace PKHeX.Core.Tests.Legality;

public class RaidTests
{
    public const string Charizard

    [Theory]
    [InlineData(Charizard, 0xbefd08cf9e027d0a)]
    public void CheckMatch(string raw, ulong seed)
    {
        byte[] data = raw.ToByteArray();
        var pk8 = new PK8(data);

        var la = new LegalityAnalysis(pk8);
        var enc = la.EncounterMatch;

        var compare = enc switch
        {
            EncounterStatic8N r => r.Verify(pk8, seed),
            EncounterStatic8ND r => r.Verify(pk8, seed),
            EncounterStatic8NC r => r.Verify(pk8, seed),
            _ => throw new ArgumentException(nameof(enc)),
        };
        compare.Should().BeTrue();
    }
}
